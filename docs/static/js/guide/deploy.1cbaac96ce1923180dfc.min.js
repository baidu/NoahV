webpackJsonp([46],{2114:function(e,t,v){e.exports=v(2483)},2483:function(e,t,v){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=v(2484),r=v(5),n=Object(r.a)(null,a.a,a.b,!1,null,null,null);t.default=n.exports},2484:function(e,t,v){"use strict";v.d(t,"a",function(){return a}),v.d(t,"b",function(){return r});var a=function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("saas-doc",[v("h2",[e._v("概述")]),e._v(" "),v("p",[e._v("本章主要介绍NoahV项目的构建部署相关知识。")]),e._v(" "),v("p",[e._v("在本地开发时，我们使用 "),v("code",{pre:!0},[e._v("noahv start")]),e._v(" 命令启动服务，但在应用部署的时候不可以再这样使用，"),v("code",{pre:!0},[e._v("noahv start")]),e._v("会针对本地开发做很多处理，而生产运行需要一个更加简单稳定的方式。所以本章主要讲解如何部署你的应用。")]),e._v(" "),v("h2",[e._v("构建")]),e._v(" "),v("p",[e._v("项目初始化后目录中会自带一个 "),v("code",{pre:!0},[e._v("build.sh")]),e._v(" 的文件，该文件主要是执行的代码编译框架的过程，经过该脚本构建之后会将所有的配置文件和依赖进行压缩合并，在output目录下产出一个 "),v("code",{pre:!0},[e._v("noahv.tar.gz")]),e._v(" 的包，压缩包中的文件结构如下所示：")]),e._v(" "),v("div",{staticClass:"normal-code"},[v("pre",{pre:!0},[v("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[e._v("noahv.tar.gz\n├── static (js/css/image)\n└── index.html (入口文件)\n")])])]),e._v(" "),v("h2",[e._v("部署")]),e._v(" "),v("p",[e._v("目前NoahV构建之后暂不支持独立部署，而是作为静态文件随API server一起部署，一般是将上述静态文件放到对应的后端框架的指定目录中")]),e._v(" "),v("p",[e._v("如对于 java spring 框架，将压缩包解压到 "),v("code",{pre:!0},[e._v("static")]),e._v(" 目录中，将入口指到 "),v("code",{pre:!0},[e._v("static/index.html")]),e._v(" 即可。")])])},r=[]}});