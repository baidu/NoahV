webpackJsonp([46],{2135:function(e,r,s){e.exports=s(2514)},2514:function(e,r,s){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=s(2515),a=s(5),v=Object(a.a)(null,t.a,t.b,!1,null,null,null);r.default=v.exports},2515:function(e,r,s){"use strict";s.d(r,"a",function(){return t}),s.d(r,"b",function(){return a});var t=function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("saas-doc",[s("h2",[e._v("概述")]),e._v(" "),s("p",[e._v("在开发联调的时候，通过 "),s("code",{pre:!0},[e._v("noahv start")]),e._v(" 命令启动的server和数据API不满足同源条件，所以在浏览器调用的时候会存在跨域的问题，具体表现为浏览器的调试窗口中出现如下错误：")]),e._v(" "),s("div",{staticClass:"normal-code"},[s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":""}},[e._v("Access to Font at 'xxx' from origin 'a' as been blocked by CORS policy:\nNo 'Access-Control-Allow-Origin' header is present on the requested resource.\n")])])]),e._v(" "),s("h2",[e._v("跨域错误解决方法")]),e._v(" "),s("p",[e._v("为了解决上述问题，NoahV中引入了代理功能，可以将浏览器的的请求代理到目标server上，从而绕过浏览器同源策略的安全限制，实现跨域数据访问，只需在 "),s("code",{pre:!0},[e._v("src/common/devProxy.js")]),e._v(" 中加入相关配置。")]),e._v(" "),s("p",[e._v("如下为示例配置:")]),e._v(" "),s("ul",[s("li",[e._v("其中target为需要将请求代理到的server，如: "),s("code",{pre:!0},[e._v("http://b.baidu.com:9099/")])]),e._v(" "),s("li",[e._v("path为需要代理的接口路径，如需要将接口路径为 "),s("code",{pre:!0},[e._v("http://a.baidu.com/api/")]),e._v(" 开头的请求全部代理到 "),s("code",{pre:!0},[e._v("http://b.baidu.com:9099/")]),e._v("，只需将 path 设置为: ['/api'];")])]),e._v(" "),s("div",{staticClass:"normal-code"},[s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e._v("proxy: {\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("path")]),e._v(": ["),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'/api'")]),e._v("],\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("option")]),e._v(": {\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("target")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'http://b.baidu.com:9099/'")]),e._v(",\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("changeOrigin")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("true")]),e._v("\n    }\n}\n")])])]),e._v(" "),s("p",[e._v("将上述代理配置好后使用 "),s("code",{pre:!0},[e._v("noahv start")]),e._v(" 命令重启NoahV，就能看到请求成功。")]),e._v(" "),s("h2",[e._v("接口鉴权")]),e._v(" "),s("p",[e._v("如果代理的目标地址的接口是有鉴权的，如通过内网的 "),s("code",{pre:!0},[e._v("uuap")]),e._v(" 进行账户验证，这种情况下上述的配置还不够，因为NoahV的代理无法获得目标地址的cookie，需要手动配置或者采用host配置的方式实现跨域鉴权。")]),e._v(" "),s("h3",[e._v("1. 通过配置hosts代理")]),e._v(" "),s("blockquote",[s("p",[e._v("对于当前server和目标代理server只是端口不同的情况，建议采用这种方案，几乎不需要做任何操作。")])]),e._v(" "),s("p",[e._v("采用这种方式有两个条件：\n"),s("br")]),e._v(" "),s("ul",[s("li",[e._v("1.Cookie需要尽可能的种在根域名下")]),e._v(" "),s("li",[e._v("2.NoahV启动的server必须和目标代理server在相同根域上")])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("如果当前server和目标代理server只是端口不同，上述两个条件直接满足，只需配置上述的 "),s("code",{pre:!0},[e._v("target")]),e._v(" 和 "),s("code",{pre:!0},[e._v("path")]),e._v(" 。")]),e._v(" "),s("p",[e._v("对于地址不同情况，假设目标代理server为: "),s("code",{pre:!0},[e._v("a.test.baidu.com")])]),e._v(" "),s("p",[e._v("NOAHV默认的启动目录是http://localhost的，可以在 "),s("code",{pre:!0},[e._v("/etc/hosts")]),e._v(" 文件中配置如下代理：")]),e._v(" "),s("div",{staticClass:"normal-code"},[s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[e._v("127.0.0.1 b.test.baidu.com\n")])])]),e._v(" "),s("p",[e._v("总之需要让NoahV启动的server和目标代理server在相同的根域上，然后在目标代理server中将cookie种到'.test.baidu.com'\n"),s("br")]),e._v(" "),s("h3",[e._v("2. 通过在配置中加入跨域代理相关配置")]),e._v(" "),s("p",[e._v("这种方式是在配置中直接将目标代理server的cookie捕获，配置到代理文件中，这样每次请求到代理server的时候就会直接带上cookie。")]),e._v(" "),s("p",[e._v("访问目标代理server，打开浏览器调试窗口，在network中任选一个请求，复制 "),s("code",{pre:!0},[e._v("Request Header")]),e._v(" 中的 "),s("code",{pre:!0},[e._v("Cookie")]),e._v(" 内容")]),e._v(" "),s("p",[e._v("将cookie内容复制到 "),s("code",{pre:!0},[e._v("proxy.option.headers")]),e._v(" 中，如下列示例所示：")]),e._v(" "),s("div",{staticClass:"normal-code"},[s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e._v("proxy: {\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("path")]),e._v(": ["),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'/api'")]),e._v("],\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("option")]),e._v(": {\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("target")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'http://b.baidu.com:9099/'")]),e._v(",\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("changeOrigin")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("true")]),e._v(",\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("headers")]),e._v(": {\n            "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("Cookie")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'sessionid=g310esj7rnxdzac863ne2hf70o2k7ak0;'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("//此处为从浏览器中获取的cookie信息")]),e._v("\n        }   \n    }\n}\n")])])]),e._v(" "),s("p",[e._v("如果希望配置多个目标代理server，可以使用router功能，详见"),s("a",{attrs:{href:"https://github.com/chimurai/http-proxy-middleware"}},[e._v("http-proxy-middleware")]),e._v("文档。")])])},a=[]}});