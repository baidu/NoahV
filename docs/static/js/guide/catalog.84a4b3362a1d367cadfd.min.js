webpackJsonp([48],{2131:function(e,s,o){e.exports=o(2502)},2502:function(e,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var n=o(2503),v=o(5),r=Object(v.a)(null,n.a,n.b,!1,null,null,null);s.default=r.exports},2503:function(e,s,o){"use strict";o.d(s,"a",function(){return n}),o.d(s,"b",function(){return v});var n=function(){var e=this,s=e.$createElement,o=e._self._c||s;return o("saas-doc",[o("h2",[e._v("概述")]),e._v(" "),o("p",[e._v("本章主要介绍NoahV的目录结构，在 "),o("a",{attrs:{href:"#/guide/quickstart"}},[e._v("快速开始")]),e._v(" 中大家对框架应该有了大体的了解，对使用工具生成的项目的目录结构一定很好奇，这里将着重介绍各个目录的作用和一些规范。")]),e._v(" "),o("h2",[e._v("目录结构")]),e._v(" "),o("div",{staticClass:"normal-code"},[o("pre",{pre:!0},[o("code",{pre:!0,attrs:{"v-pre":""}},[e._v("noahv-project\n├── mockup\n├── node_modules\n├── scripts\n├── src\n│   ├──conmmon\n│   │   ├── assets\n│   │   │   ├── css\n│   │   │   │    ├── components (部分基础组件样式)\n│   │   │   │    ├── global.less (全局样式)\n│   │   │   │    ├── header.less (头部样式)\n│   │   │   │    └── main.less  (样式文件入口)     \n│   │   │   └── img\n│   │   │        ├── logo.png (默认的logo文件，请根据需要替换)\n│   │   │        └── favicon.ico (默认浏览器tab栏的icon，请根据需要替换)\n│   │   ├── hook\n│   │   │    └── ajax.js (hook文件，可以通过hook的方式介入数据请求，详见数据请求介绍)\n│   │   ├── layout\n│   │   │    ├── 404.vue (默认404页面)\n│   │   │    ├── footer.vue (自定义页脚文件，可以在main.js中引用)\n│   │   │    └── layout.vue (自定义布局文件，可以在main.js中引用)\n│   │   ├── config.js (保留文件)\n│   │   ├── devProxy.js (代理配置文件，详见代理介绍)\n│   │   ├── header.js (导航栏配置，当使用系统自带导航时有效)\n│   │   └── router.js (路由配置文件)\n│   ├── demo (运行demo文件目录，正式发布时可以删除) \n│   ├── store (vuex目录，具体请参考vuex官网)\n│   ├── tools (工具模块)\n│   │     └── utils.js 通用工具文件\n│   └── view (仪表盘目录，仅通过脚手架工具创建仪表盘项目时含有此目录，详情查看仪表盘使用说明部分)\n│\n├── build.sh (编译脚本)\n├── index.html (静态模板)\n├── package.json (依赖管理)\n└── README.md \n")])])]),e._v(" "),o("h3",[e._v("如上，为框架约定的项目目录")]),e._v(" "),o("ul",[o("li",[o("code",{pre:!0},[e._v("mockup")]),e._v(" 该目录为模拟数据文件所在目录")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("scripts")]),e._v(" webpack脚本文件，编译脚本文件")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("build.sh")]),e._v(" 是项目编译脚本，具体请参考 "),o("a",{attrs:{href:"#/guide/deploy"}},[e._v("构建部署")])]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("src")]),e._v(" 该目录为项目代码所在，可以在这里编写配置、编写代码、接入数据")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("src/common")]),e._v(" 公共配置/代码，该目录下各个文件的作用见下文。")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("src/Custom directory")]),e._v(" 该目录不是真实存在的，通过脚手架工具创建的配置默认是放到该目录下。")])]),e._v(" "),o("h3",[e._v("config/common 目录下文件的作用：")]),e._v(" "),o("ul",[o("li",[o("code",{pre:!0},[e._v("assets")]),e._v(" 公共的静态文件，如图片、样式等")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("assets/css/header.less")]),e._v(" 导航栏样式文件，可以再这儿编写css代码改变导航的样式")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("assets/css/main.less")]),e._v(" 自定义样式文件入口，可以在这儿编写css或者import其他css文件")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("config.js")]),e._v(" 预留的配置文件")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("devProxy.js")]),e._v(" 开发环境代理配置文件，如果想在开发环境请求不同域下数据，可以在该文件下配置代理，详见 "),o("a",{attrs:{href:"#/guide/proxy"}},[e._v("开发环境代理配置")])]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("header.js")]),e._v(" 页面头部配置文件、详见 "),o("a",{attrs:{href:"#/guide/menu"}},[e._v("导航配置")])]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("router.js")]),e._v(" 路由配置文件，通过脚手架命令 "),o("code",{pre:!0},[e._v("noahv create")])])]),e._v(" "),o("p",[e._v("创建的页面不需要在手动配置路由，如果是自己手动创建的目录或者文件，需要手动添加路由才能访问")]),e._v(" "),o("p",[e._v("另外我们建议在src目录下建立业务目录，将不同模块功能放到不同目录下，如将业务监控相关页面放置到 "),o("code",{pre:!0},[e._v("src/bussiness")]),e._v(" ,将站点监控相关页面放置到 "),o("code",{pre:!0},[e._v("src/website")]),e._v(" 中。")])])},v=[]}});